name: AI Agent Tests

on:
    workflow_run:
        workflows: ["Build"]
        types: [completed]

jobs:
    ai-test:
        runs-on: ubuntu-latest
        if: github.event.workflow_run.conclusion == 'success'

        steps:
            - uses: actions/checkout@v4
            
            - uses: pnpm/action-setup@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'pnpm'
                  cache-dependency-path: 'pnpm-lock.yaml'

            - name: Restore build artifacts
              uses: actions/cache@v4
              with:
                  path: |
                      packages/*/dist
                      packages/*/build
                      node_modules
                  key: build-artifacts-${{ github.event.workflow_run.head_sha }}
                  fail-on-cache-miss: true

            - name: Check for AI files changes
              uses: dorny/paths-filter@v3
              id: ai_changes
              with:
                  token: ${{ github.token }}
                  base: ${{ github.event.workflow_run.head_sha }}~1
                  head: ${{ github.event.workflow_run.head_sha }}
                  filters: |
                    ai:
                      - 'packages/backend/src/ee/services/ai/**/*'
                      - 'packages/common/**/*'

            - uses: 8BitJonny/gh-get-current-pr@3.0.0
              id: PR
              if: github.event.workflow_run.event == 'pull_request'

            - name: Check for AI test override
              id: ai_override
              run: |
                  if [ "${{ github.event.workflow_run.event }}" = "pull_request" ]; then
                      echo "AI override: ${{contains(steps.PR.outputs.pr_body, 'test-ai')}}"
                      echo "should_run=${{contains(steps.PR.outputs.pr_body, 'test-ai')}}" >> "$GITHUB_OUTPUT"
                  else
                      echo "should_run=false" >> "$GITHUB_OUTPUT"
                  fi

            - name: Run AI Agent Tests
              if: steps.ai_changes.outputs.ai == 'true' || steps.ai_override.outputs.should_run == 'true'
              run: pnpm --filter backend test -- --testPathPattern="src/ee/services/ai/agents/tests/agent.test.ts"
              env:
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  OPENAI_MODEL_NAME: 'gpt-4o'
                  AI_COPILOT_ENABLED: 'true'